openapi: 3.0.2

info:
  title: Finances
  version: 1.0.0

servers:
  - url: '/'
    description: Local server

tags:
  - name: sessions
  - name: books

paths:
  /tokens:
    post:
      operationId: createToken
      tags: ["sessions"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: david@something.net
                password:
                  type: string
                  example: foobar
      responses:
        200:
          description: Token was created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  status:
                    type: string
                  authenticated:
                    type: boolean

  /books:
    get:
      operationId: Books.List
      tags: ["books"]
      description: |
        Get a list of all the books to which the current user has access.
        Users with 'admin' role will still the books to which they explicitly
        have access to. Use the 'all=true' query parameter to see all of them.
      parameters:
        - $ref: '#/components/parameters/ListAll'
      security:
        - SessionAuth: []
      responses:
        200:
          description: List of books
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookList'

  /books/{bookID}:
    parameters:
      - name: bookID
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: Books.Get
      tags: ["books"]
      description: |
        Get a specific book, identified by its ID.
      security:
        - SessionAuth: []
      responses:
        200:
          description: Book detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

components:
  securitySchemes:
    SessionAuth:
      type: http
      scheme: bearer

  parameters:
    ListAll:
      name: list-all
      in: query
      description: |
        Force the complete list to be returned. This will make the operation fail
        if current user does not have necessary rights.
      required: false
      schema:
        type: boolean

  schemas:
    BookId:
      type: integer
      format: int64

    UserId:
      type: integer
      format: int64

    Book:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BookId'
        name:
          type: string
        owner_id:
          $ref: '#/components/schemas/UserId'

    BookList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Book'
